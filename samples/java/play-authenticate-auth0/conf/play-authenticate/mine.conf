#####################################################################################
#
# My play-authenticate settings
#
#####################################################################################

play-authenticate {

    # If set to true, account merging is enabled, if set to false its disabled and accounts will never prompted to be merged
    # defaults to true
    accountMergeEnabled=false
    
    # if this is set to true, accounts are automatically linked
    # (e.g. if a user is logged in and uses a different authentication provider
    # which has NOT yet been registered to another user, this newly used authentication
    # provider gets added to the current local user
    # Handle setting this to true with care
    # If set to false, your resolver must not return null for askLink()
    # defaults to false
    accountAutoLink=true

    # Settings for the google-based authentication provider
    # if you are not using it, you can remove this portion of the config file
    # and remove the Google provider from conf/play.plugins
    auth0 {
        redirectUri {
            # Whether the redirect URI scheme should be HTTP or HTTPS (HTTP by default)
            secure=false

            # You can use this setting to override the automatic detection
            # of the host used for the redirect URI (helpful if your service is running behind a CDN for example)
            # host=yourdomain.com
        }
        authorizationUrl="https://yourdomain.auth0.com/authorize"
        accessTokenUrl="https://yourdomain.auth0.com/oauth/token"
        userInfoUrl="https://yourdomain.auth0.com/userinfo"
        logoutUrl="https://yourdomain.auth0.com/oidc/logout"
        scope="openid profile email"

        # auth0 credentials
        # Get them here: https://manage.auth0.com/#/applications
        # Remove leading '#' after entering:
        # clientId=
        # clientSecret=
        # An organization may have to be specified depending on how the auth0 application is set up
        # organization=
    }
}